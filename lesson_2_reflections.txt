What happens when you initialize a repository? Why do you need to do it?
A .git file is created to save snapshot of the working directory
To track changes to files in a directory

How is the staging area different from the working directory and the repository? What value do you think it offers?
It allows you to add individual files to be committed

How can you use the staging area to make sure you have one commit per logical change?
You use git diff --stage to know exactly what changes you made against the last commit. This will influence the commit message and ensure 
a commit make sense logically

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branching comes in handy when you are tying out a new experiment or a feature and you don't want to mess up the master branch

How do the diagrams help you visualize the branch structure?
visualization of the branch structure allowed me to understanding the way branching works in git. For instance, if you checkout a previous and make changes to that commit, if you switch afterwards back to the branch, the commits will be lost because git log has no reference to that node of commit

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result is that master branch gets updated with the changes introduced by the other branch.
We represented in the diagram for proper understanding how it works

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging
Pros: It relieves one the pain of having to look through the code to see what changes in both commits and how to merge them thereby saving time
Cons: Not suitable when merging changes to exact portion of a file

Manual merging:
Pros: It gives control as to how best to resolve conflict in case there is any
Cons: It takes time 
